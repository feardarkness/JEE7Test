/* 
 * Copyright (C) 2015 FearDarkness
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or    implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

function MensajeChat(mensaje, usuario, fechaRecepcion, sala) {
    this.mensaje = mensaje;
    this.usuario = usuario;
    this.fechaRecepcion = fechaRecepcion;
    this.sala = sala;
}

function convertirMensajeAJson(mensaje) {
    try {
        var mensajeJson = JSON.parse(mensaje);
    } catch (e) {
        alert("Ha ocurrido un error grave. Intente de nuevo en unos minutos. Si el error persiste <a href='#'>contactenos</a>");
    }
    return mensajeJson;
}

function convertirRespuestaServidorAMensajeChat(mensaje) {
    var mensajeJson = convertirMensajeAJson(mensaje);
    var mensajeChat = new MensajeChat(mensajeJson.mensaje, mensajeJson.usuario, mensajeJson.fechaRecepcion, mensajeJson.sala);
    return mensajeChat;
}

function agregarYDibujarInterfazDeMensajes(mensajeChat) {
    var $divChatContenedor = $("#chat").parent(),
            $divChat = $("#chat").detach(),
            contenidoChat = $divChat.html();
    contenidoChat += "<p>[<em><small>" + mensajeChat.fechaRecepcion + "</small></em>] <strong>" + mensajeChat.usuario + "</strong>: " + emoticon.agregarEmoticones(mensajeChat.mensaje) + "</p>";
    $divChat.html(contenidoChat).appendTo($divChatContenedor);
    $("#contenedor-chat").animate({scrollTop: $divChat.height()}, 1000);
}

function ReemplazaEmoticones(texto) {

    texto.replace
}

function limpiarYEstablecerFocoEnInputMensaje() {
    $("#mensaje").val("").focus();
}

$(document).ready(function () {    
    var webSocketChat = new WebSocket("ws://" + window.location.host + "/JEE7Varios-web/webSocketChat");

    // cuando ha ocurrido un error
    webSocketChat.addEventListener("error", function (event) {
        console.log(event);
    });
    // cuando el websocket ya esta abierto
    webSocketChat.addEventListener("open", function (event) {
        console.log(event);
    });
    // cuando el websocket se cierra
    webSocketChat.addEventListener("close", function (event) {
        console.log(event);
    });
    // cuando se recibe datos del servidor
    webSocketChat.addEventListener("message", function (event) {
        var mensajeChat = convertirRespuestaServidorAMensajeChat(event.data);
        agregarYDibujarInterfazDeMensajes(mensajeChat);
    });

    $("#enviar").on("click", function (e) {
        e.preventDefault();
        // OJO, por buena practica, varias inicializaciones deber√≠an ir separadas por comas, no con un var para cada una
        var mensaje = $("#mensaje").val(),
                usuario = $("#usuario").val();
        ;
        var fechaMensaje = moment().format("DD/MM/YYYY HH:mm:ss");
        var mensajeChat = new MensajeChat(mensaje, usuario, fechaMensaje, "default");
        agregarYDibujarInterfazDeMensajes(mensajeChat);
        limpiarYEstablecerFocoEnInputMensaje();
        webSocketChat.send(JSON.stringify(mensajeChat));  
        
    });
});